#!/usr/bin/bash

bold=`tput bold`
underline=`tput smul`
stop_underline=`tput rmul`
reset=`tput sgr0`

echo "This is the ${bold}tar${reset} command."

# The command's name
echo -e 'tar'

# the command's description
echo "description here"

echo "------------"

# the command's syntax
echo "Syntax:"
echo "tar [OPTION...] [FILE]..."
echo "\t-A, --catenate, --concatenate"
echo "\tappend tar files to an archive"
echo "\t-c, --create"
echo "\tcreate a new archive"
echo "\t-d, --diff, --compare"
echo "\tfind differences between archive and file system"
echo "\t--delete"
echo "\tdelete from the archive (not on mag tapes!)"
echo "\t-r, --append"
echo "\tappend files to the end of an archive"
echo "\t-t, --list"
echo "\tlist the contents of an archive"
echo "\t--test-label"
echo "\ttest the archive volume label and exit"
echo "\t-u, --update"
echo "\tonly append files newer than copy in archive"
echo "\t-x, --extract, --get"
echo "\textract files from an archive"
echo "\t-C, --directory=DIR"
echo "\tchange to directory DIR"
echo "\t-f, --file=ARCHIVE"
echo "\tuse archive file or device ARCHIVE"
echo "\t-j, --bzip2"
echo "\tfilter the archive through bzip2"
echo "\t-J, --xz"
echo "\tfilter the archive through xz"
echo "\t-p, --preserve-permissions"
echo "\textract information about file permissions (default for superuser)"
echo "\t-v, --verbose"
echo "\tverbosely list files processed"
echo "\t-z, --gzip"
echo "\tfilter the archive through gzip"
echo "\t"
echo "\tOperation modifiers:"
echo "\t"
echo "\t--check-device"
echo "\tcheck device numbers when creating incremental archives (default)"
echo "\t-g, --listed-incremental=FILE"
echo "\thandle new GNU-format incremental backup"
echo "\t-G, --incremental"
echo "\thandle old GNU-format incremental backup"
echo "\t--ignore-failed-read"
echo "\tdo not exit with nonzero on unreadable files"
echo "\t--level=NUMBER"
echo "\tdump level for created listed-incremental archive"
echo "\t-n, --seek"
echo "\tarchive is seekable"
echo "\t--no-check-device"
echo "\tdo not check device numbers when creating incremental archives"
echo "\t--no-seek"
echo "\tarchive is not seekable"
echo "\t--occurrence[=NUMBER]"
echo "\tprocess only the NUMBERth occurrence of each file in the archive; this option is valid only in conjunction with one of the subcommands --delete, --diff, --extract or --list and when a list of files is given either on the command line or via the -T option; NUMBER defaults to 1"
echo "\t--sparse-version=MAJOR[.MINOR]"
echo "\tset version of the sparse format to use (implies --sparse)"
echo "\t-S, --sparse"
echo "\thandle sparse files efficiently"
echo "\t"
echo "\tOverwrite control:"
echo "\t"
echo "\t-k, --keep-old-files"
echo "\tdon't replace existing files when extracting, treat them as errors"
echo "\t--skip-old-files"
echo "\tdon't replace existing files when extracting, silently skip over them"
echo "\t--keep-newer-files"
echo "\tdon't replace existing files that are newer than their archive copies"
echo "\t--no-overwrite-dir"
echo "\tpreserve metadata of existing directories"
echo "\t--overwrite"
echo "\toverwrite existing files when extracting"
echo "\t--overwrite-dir"
echo "\toverwrite metadata of existing directories when extracting (default)"
echo "\t--recursive-unlink"
echo "\tempty hierarchies prior to extracting directory"
echo "\t--remove-files"
echo "\tremove files after adding them to the archive"
echo "\t-U, --unlink-first"
echo "\tremove each file prior to extracting over it"
echo "\t-W, --verify"
echo "\tattempt to verify the archive after writing it"
echo "\t"
echo "\tSelect output stream:"
echo "\t"
echo "\t--ignore-command-error "
echo "\tignore exit codes of children"
echo "\t--no-ignore-command-error"
echo "\ttreat non-zero exit codes of children as error"
echo "\t-O, --to-stdout"
echo "\textract files to standard output"
echo "\t--to-command=COMMAND"
echo "\tpipe extracted files to another program"
echo "\tHandling of file attributes:"
echo "\t--acls"
echo "\tSave the ACLs to the archive"
echo "\t--atime-preserve[=METHOD]"
echo "\tpreserve access times on dumped files, either by restoring the times after reading (METHOD='replace'; default) or by not setting the times in the first place (METHOD='system')"
echo "\t--delay-directory-restore"
echo "\tdelay setting modification times and permissions of extracted directories until the end of extraction"
echo "\t--group=NAME"
echo "\tforce NAME as group for added files"
echo "\t--mode=CHANGES"
echo "\tforce (symbolic) mode CHANGES for added files"
echo "\t--mtime=DATE-OR-FILE"
echo "\tset mtime for added files from DATE-OR-FILE"
echo "\t-m, --touch"
echo "\tdon't extract file modified time"
echo "\t--no-acls"
echo "\tDon't extract the ACLs from the archive"
echo "\t--no-delay-directory-restore"
echo "\tcancel the effect of --delay-directory-restore option"
echo "\t--no-same-owner"
echo "\textract files as yourself (default for ordinary users)"
echo "\t--no-same-permissions"
echo "\tapply the user's umask when extracting permissions from the archive (default for ordinary users)"
echo "\t--no-selinux"
echo "\tDon't extract the SELinux context from the archive"
echo "\t--no-xattrs"
echo "\tDon't extract the user/root xattrs from the archive"
echo "\t--numeric-owner"
echo "\talways use numbers for user/group names"
echo "\t--owner=NAME"
echo "\tforce NAME as owner for added files"
echo "\t-p, --preserve-permissions, --same-permissions"
echo "\textract information about file permissions (default for superuser)"
echo "\t--preserve"
echo "\tsame as both -p and -s"
echo "\t--same-owner"
echo "\ttry extracting files with the same ownership as exists in the archive (default for superuser)"
echo "\t-s, --preserve-order, --same-order"
echo "\tsort names to extract to match archive"
echo "\t--selinux"
echo "\tSave the SELinux context to the archive"
echo "\t--xattrs"
echo "\tSave the user/root xattrs to the archive"
echo "\t"
echo "\tDevice selection and switching:"
echo "\t"
echo "\t-f, --file=ARCHIVE"
echo "\tuse archive file or device ARCHIVE"
echo "\t--force-local"
echo "\tarchive file is local even if it has a colon"
echo "\t-F, --info-script=NAME, --new-volume-script=NAME"
echo "\trun script at end of each tape (implies -M)"
echo "\t-L, --tape-length=NUMBER"
echo "\tchange tape after writing NUMBER x 1024 bytes"
echo "\t-M, --multi-volume"
echo "\tcreate/list/extract multi-volume archive"
echo "\t--rmt-command=COMMAND"
echo "\tuse given rmt COMMAND instead of rmt"
echo "\t--rsh-command=COMMAND"
echo "\tuse remote COMMAND instead of rsh"
echo "\t--volno-file=FILE"
echo "\tuse/update the volume number in FILE"
echo "\t"
echo "\tDevice blocking:"
echo "\t"
echo "\t-b, --blocking-factor=BLOCKS"
echo "\tBLOCKS x 512 bytes per record"
echo "\t-B, --read-full-records"
echo "\treblock as we read (for 4.2BSD pipes)"
echo "\t-i, --ignore-zeros"
echo "\tignore zeroed blocks in archive (means EOF)"
echo "\t--record-size=NUMBER"
echo "\tNUMBER of bytes per record, multiple of 512"
echo "\t"
echo "\tArchive format selection:"
echo "\t"
echo "\t-H, --format=FORMAT"
echo "\tcreate archive of the given format"
echo "\tFORMAT is one of the following:"
echo "\t"
echo "\tgnu"
echo "\t"
echo "\tGNU tar 1.13.x format"
echo "\t"
echo "\toldgnu"
echo "\t"
echo "\tGNU format as per tar <= 1.12"
echo "\t"
echo "\tpax"
echo "\t"
echo "\tPOSIX 1003.1-2001 (pax) format"
echo "\t"
echo "\tposix"
echo "\t"
echo "\tsame as pax"
echo "\t"
echo "\tustar"
echo "\t"
echo "\tPOSIX 1003.1-1988 (ustar) format"
echo "\t"
echo "\tv7"
echo "\t"
echo "\told V7 tar format"
echo "\t"
echo "\t--old-archive, --portability"
echo "\tsame as --format=v7"
echo "\t--pax-option=keyword[[:]=value][,keyword[[:]=value]]..."
echo "\tcontrol pax keywords"
echo "\t--posix"
echo "\tsame as --format=posix"
echo "\t-V, --label=TEXT"
echo "\tcreate archive with volume name TEXT; at list/extract time, use TEXT as a globbing pattern for volume name"
echo "\t"
echo "\tCompression options:"
echo "\t"
echo "\t-a, --auto-compress"
echo "\tuse archive suffix to determine the compression program"
echo "\t-I, --use-compress-program=PROG"
echo "\tfilter through PROG (must accept -d)"
echo "\t-j, --bzip2"
echo "\tfilter the archive through bzip2"
echo "\t-J, --xz"
echo "\tfilter the archive through xz"
echo "\t--lzip"
echo "\tfilter the archive through lzip"
echo "\t--lzma"
echo "\tfilter the archive through lzma"
echo "\t--lzop"
echo "\t--no-auto-compress"
echo "\tdo not use archive suffix to determine the compression program"
echo "\t-z, --gzip, --gunzip, --ungzip"
echo "\tfilter the archive through gzip"
echo "\t-Z, --compress, --uncompress"
echo "\tfilter the archive through compress"
echo "\t"
echo "\tLocal file selection:"
echo "\t"
echo "\t--add-file=FILE"
echo "\tadd given FILE to the archive (useful if its name starts with a dash)"
echo "\t--backup[=CONTROL]"
echo "\tbackup before removal, choose version CONTROL"
echo "\t-C, --directory=DIR"
echo "\tchange to directory DIR"
echo "\t--exclude=PATTERN"
echo "\texclude files, given as a PATTERN"
echo "\t--exclude-backups"
echo "\texclude backup and lock files"
echo "\t--exclude-caches"
echo "\texclude contents of directories containing CACHEDIR.TAG, except for the tag file itself"
echo "\t--exclude-caches-all"
echo "\texclude directories containing CACHEDIR.TAG"
echo "\t--exclude-caches-under exclude everything under directories containing"
echo "\tCACHEDIR.TAG"
echo "\t--exclude-tag=FILE"
echo "\texclude contents of directories containing FILE, except for FILE itself"
echo "\t--exclude-tag-all=FILE exclude directories containing FILE"
echo "\t--exclude-tag-under=FILE"
echo "\texclude everything under directories containing FILE"
echo "\t--exclude-vcs"
echo "\texclude version control system directories"
echo "\t-h, --dereference"
echo "\tfollow symlinks; archive and dump the files they point to"
echo "\t--hard-dereference"
echo "\tfollow hard links; archive and dump the files they refer to"
echo "\t-K, --starting-file=MEMBER-NAME"
echo "\tbegin at member MEMBER-NAME in the archive"
echo "\t--newer-mtime=DATE"
echo "\tcompare date and time when data changed only"
echo "\t--no-null"
echo "\tdisable the effect of the previous --null option"
echo "\t--no-recursion"
echo "\tavoid descending automatically in directories"
echo "\t--no-unquote"
echo "\tdo not unquote filenames read with -T"
echo "\t--null -T reads null-terminated names, disable -C"
echo "\t-N, --newer=DATE-OR-FILE, --after-date=DATE-OR-FILE"
echo "\tonly store files newer than DATE-OR-FILE"
echo "\t--one-file-system"
echo "\tstay in local file system when creating archive"
echo "\t-P, --absolute-names"
echo "\tdon't strip leading '/'s from file names"
echo "\t--recursion"
echo "\trecurse into directories (default)"
echo "\t--suffix=STRING"
echo "\tbackup before removal, override usual suffix ('~' unless overridden by environment variable SIMPLE_BACKUP_SUFFIX)"
echo "\t-T, --files-from=FILE"
echo "\tget names to extract or create from FILE"
echo "\t--unquote"
echo "\tunquote filenames read with -T (default)"
echo "\t-X, --exclude-from=FILE"
echo "\texclude patterns listed in FILE"
echo "\t"
echo "\tFile name transformations:"
echo "\t"
echo "\t--strip-components=NUMBER"
echo "\tstrip NUMBER leading components from file names on extraction"
echo "\t--transform=EXPRESSION, --xform=EXPRESSION"
echo "\tuse sed replace EXPRESSION to transform file names"
echo "\tFile name matching options (affect both exclude and include patterns):"
echo "\t--anchored"
echo "\tpatterns match file name start"
echo "\t--ignore-case"
echo "\tignore case"
echo "\t--no-anchored"
echo "\tpatterns match after any '/' (default for exclusion)"
echo "\t--no-ignore-case"
echo "\tcase sensitive matching (default)"
echo "\t--no-wildcards"
echo "\tverbatim string matching"
echo "\t--no-wildcards-match-slash"
echo "\twildcards do not match '/'"
echo "\t--wildcards"
echo "\tuse wildcards (default)"
echo "\t--wildcards-match-slash"
echo "\twildcards match '/' (default for exclusion)"
echo "\t"
echo "\tInformative output:"
echo "\t"
echo "\t--checkpoint[=NUMBER]"
echo "\tdisplay progress messages every NUMBERth record (default 10)"
echo "\t--checkpoint-action=ACTION"
echo "\texecute ACTION on each checkpoint"
echo "\t--index-file=FILE"
echo "\tsend verbose output to FILE"
echo "\t-l, --check-links"
echo "\tprint a message if not all links are dumped"
echo "\t--no-quote-chars=STRING"
echo "\tdisable quoting for characters from STRING"
echo "\t--quote-chars=STRING"
echo "\tadditionally quote characters from STRING"
echo "\t--quoting-style=STYLE"
echo "\tset name quoting style; see below for valid STYLE values"
echo "\t-R, --block-number"
echo "\tshow block number within archive with each message"
echo "\t--show-defaults"
echo "\tshow tar defaults"
echo "\t--show-omitted-dirs"
echo "\twhen listing or extracting, list each directory that does not match search criteria"
echo "\t--show-transformed-names, --show-stored-names"
echo "\tshow file or archive names after transformation"
echo "\t--totals[=SIGNAL]"
echo "\tprint total bytes after processing the archive; with an argument - print total bytes when this SIGNAL is delivered; Allowed signals are: SIGHUP, SIGQUIT, SIGINT, SIGUSR1 and SIGUSR2; the names without SIG prefix are also accepted"
echo "\t--utc"
echo "\tprint file modification dates in UTC"
echo "\t-v, --verbose"
echo "\tverbosely list files processed"
echo "\t--warning=KEYWORD"
echo "\twarning control"
echo "\t-w, --interactive, --confirmation"
echo "\task for confirmation for every action"
echo "\tCompatibility options:"
echo "\t"
echo "\t-o"
echo "\twhen creating, same as --old-archive; when extracting, same as --no-same-owner"
echo "\t"
echo "\tOther options:"
echo "\t"
echo "\t-?, --help"
echo "\tgive this help list"
echo "\t--restrict"
echo "\tdisable use of some potentially harmful options"
echo "\t--usage"
echo "\tgive a short usage message"
echo "\t--version"
echo "\tprint program version"
echo "\tMandatory or optional arguments to long options are also mandatory or optional for any corresponding short options."
echo "\tThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX. The version control may be set with --backup or VERSION_CONTROL, values are:"
echo "\t"
echo "\tnone, off"
echo "\tnever make backups"
echo "\tt, numbered"
echo "\tmake numbered backups"
echo "\tnil, existing"
echo "\tnumbered if numbered backups exist, simple otherwise"
echo "\tnever, simple"
echo "\talways make simple backups"
echo "\tValid arguments for the --quoting-style option are:"
echo "\tliteral shell shell-always c c-maybe escape locale clocale"

#   ...      etc

echo "------------"

# the command's usage examples
# example 1
echo "test"
echo description here

# example 2
echo "test something"
echo description here


exit 0
