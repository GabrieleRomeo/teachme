#!/usr/bin/bash

bold=$(tput bold)
underline=$(tput smul)
stop_underline=$(tput rmul)
reset=$(tput sgr0)

echo "This is the ${bold}ssh${reset} command."

# The command's name
echo -e 'ssh'

# the command's description
echo "Used to start up the SSH program which allow the user to log in to a remote machine and execute commands on it. SSH is the most common way to access remote UNIX servers securely."

echo "------------"

# the command's syntax
echo "Syntax:"
echo "${bold}ssh [OPTION]...${reset}"
echo -e "\t-${bold}--1:${reset} \t try protocol version 1 only"					
echo -e "\t-${bold}--2:${reset} \t try protocol version 2 only"					
echo -e "\t-${bold}--4:${reset} \t use IPv4 addresses only"					
echo -e "\t-${bold}--6:${reset} \t use IPv6 addresses only"					
echo -e "\t-${bold}--A:${reset} \t enables forwarding of the authentication agent connection.  This can also be specified on a per-host basis in a configuration file"					
echo -e "\t-${bold}-D:${reset} \t specifies a local “dynamic” application-level port forwarding"			
echo -e "\t-${bold}--help:${reset} \t display this help and exit"					
echo -e "\t-${bold}--version:${reset} \t output version information and exit"	

echo "------------"

# the command's usage examples
# example 1
echo "ssh -p 1234 username@remote_host"
echo "It uses the provided ${username}username${reset} and tries to set up a connection on port 1234 to the ${username}remote_host${reset} (an IP address or a domain name)" 

# example 2
echo "cat file | ssh -c -p 1234 -e none remote_host 'cat > file' 
echo "It tries to copy a compressed (${bold}-c${reset} flag) local file onto a remote_host trying to set up a connection on port 1234"


exit 0
