#!/usr/bin/bash

bold=$(tput bold)
underline=$(tput smul)
stop_underline=$(tput rmul)
reset=$(tput sgr0)

echo "This is the ${bold}rmdir${reset} command."

# The command's name
echo -e 'rmdir'

# the command's description
echo "Used to remove one or more DIRECTORY, if they are empty."

echo "------------"

# the command's syntax
echo "Syntax:"
echo "rmdir [OPTION]... DIRECTORY..."
echo -e "\t--ignore-fail-on-non-empty: ignore each failure that is solely because a directory is non-empty"
echo -e "\t-p, --parents: remove DIRECTORY and its ancestors; e.g., 'rmdir -p a/b/c' is similar to 'rmdir a/b/c a/b a'"
echo -e "\t-v, --verbose: output a diagnostic for every directory processed"
echo -e "\t--help: display this help and exit"
echo -e "\t--version: output version information and exit"
echo "------------"

echo "${bold}rmdir [OPTION]... DIRECTORY...${reset}"			
echo -e "\t${bold}--ignore-fail-on-non-empty:${reset} \t ignore each failure that is solely because a directory is non-empty"			
echo -e "\t${bold}-p, --parents:${reset} \t remove DIRECTORY and its ancestors; e.g., 'rmdir -p a/b/c' is similar to 'rmdir a/b/c a/b a'"			
echo -e "\t${bold}-v, --verbose:${reset} \t output a diagnostic for every directory processed"			

# the command's usage examples
# example 1
echo "rmdir test1 test2"
echo " remove two empty directories named dir1 and dir2 that are located in the current directory"

# example 2
echo "rmdir test1/test2/test3"
echo "he following would remove test3, test2 and test1 if test2 were empty, test1 only contained test2 and test1 only contained test2 (which, in turn, contained test1)"


exit 0
