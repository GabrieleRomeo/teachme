#!/usr/bin/bash

bold=$(tput bold)
underline=$(tput smul)
stop_underline=$(tput rmul)
reset=$(tput sgr0)

echo "This is the git ${bold}config${reset} command."

# The command's name
echo -e 'git config'

# the command's description
echo "Used to update the .gitconfig file. The file can be edited at a global level to specify cnfiguration options for a particular user, and at the repository level to specify options for the particular repo. If the repo was cloned by another user, the settings would affect that user as well."

echo "------------"

# the command's syntax
echo "Syntax:"
echo "${bold}git config [OPTION]...${reset}"
echo -e "\t-${bold}-add:${reset} \t adds a new line to the option without altering any existing values"			
echo -e "\t-${bold}-get:${reset} \t gets the value for a given key (optionally filtered by a regex matching the value). Returns error code 1 if the key was not found and the last value if multiple key values were found"			
echo -e "\t-${bold}-l, --list:${reset} \t lists all variables set in config file"	
echo -e "\t-${bold}-e, --edit:${reset} \t opens an editor to modify the specified config file"	
echo -e "\t-${bold--help:${reset} \t displays this help and exit"					
echo -e "\t-${bold}--version:${reset} \t outputs version information and exit"	

echo "------------"

# the command's usage examples
# example 1
echo "git config --global user.name \"Your Username\" ; git config --global user.email youremail@mail.com"
echo "It sets your credentials (username and email) in the Git environment. This is, usually, the first operation to do just after Git has been installed on your machine"  

# example 2
echo "git config --global credential.helper 'cache --timeout=3600'"
echo "It caches credentials in memory for use by future Git programs. In this example, the credentials will expire in one hour (3600 seconds)"


exit 0
