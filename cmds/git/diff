#!/usr/bin/bash

bold=`tput bold`
underline=`tput smul`
stop_underline=`tput rmul`
reset=`tput sgr0`

echo "This is the git ${bold}diff${reset} command."

# The command's name
echo -e 'git diff'

# the command's description
echo "By default, used to show the differences between the working tree and the index. It can also be used to show differences between two files or two trees."

echo "------------"

# the command's syntax
echo "Syntax:"
echo "git test argument1 argument2"
echo -e "\targument1: description of argument 1"
echo -e "\targument2: description of argument 2"
#   ...      etc

echo "------------"

# the command's usage examples
# example 1
echo "git diff HEAD^ HEAD <file>"
echo "It shows the differences for the file <${bold}file${reset}> between now and one commit back. The special character ${bold}^${reset} is used for specify the number of commit back (you can use also this notation ~1)"

# example 2
echo "git diff hotfix:cmds/command1.sh git hotfix~1:cmds/command1.sh"
echo "Same as the previous example but, now, it shows the differences for the file located on a specific branch. The general pattern to use is <${bold}branchname${reset}>:<${bold}file${reset}> <${bold}branchname${reset}>${bold}~1${reset}:<${bold}file${reset}> and the number of commits back is specified just after the ${bold}~${reset} character"


exit 0
