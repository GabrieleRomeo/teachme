#!/usr/bin/bash

bold=$(tput bold)
underline=$(tput smul)
stop_underline=$(tput rmul)
reset=$(tput sgr0)

echo "This is the git ${bold}log${reset} command."

# The command's name
echo -e 'git log'

# the command's description
echo "Used to show the list of all the commit messages that have lead up to the current snapshot."

echo "------------"

# the command's syntax
echo "Syntax:"
echo "${bold}git log [OPTION]...${reset}"			
echo -e "\t${bold}-n <number>${reset} \t Limit the number of commits to output."			
echo -e "\t${bold}--skip=<number>${reset} \t Skip number commits before starting to show the commit output."			
echo -e "\t${bold}--grep=<pattern>${reset} \t Limit the commits output to ones with log message that matches the specified pattern (regular expression). With more than one --grep=<pattern>, commits whose message matches any of the given patterns are chosen (but see --all-match)."			

echo "------------"

# the command's usage examples
# example 1
echo "git log --all"
echo "force the log tool display all commits (regardless of the branch checked out) by using the –all option"

# example 2
echo "git log --author <name>"
echo "git log --committer <name>"
echo "filter commits is by the person who wrote or committed the changes. This can be done using the –author and –committer options."


exit 0
