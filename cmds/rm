#!/usr/bin/bash

bold=$(tput bold)
underline=$(tput smul)
stop_underline=$(tput rmul)
reset=$(tput sgr0)

echo "This is the ${bold}rm${reset} command."

# The command's name
echo -e 'rm'

# the command's description
echo "Removes each file that's specified. By default, ${bold}rm${reset} does not remove directories. It generally does not destroy file data, since its purpose is really merely to unlink references, and the filesystem space freed may still contain leftover data from the removed file."

echo "------------"

# the command's syntax
echo "Syntax:"
echo "${bold}rm [OPTION]...${reset}"
echo -e "\t-${bold}-f, --force:${reset} \t ignore nonexistant files, and never prompt before removing."			
echo -e "\t-${bold}-i:${reset} \t Prompt before every removal"	
echo -e "\t-${bold}-I:${reset} \t Prompt once before removing more than three files, or when removing recursively. Less intrusive than -i, while still giving protection against most mistakes"
echo -e "\t-${bold}-r, -R, --recursive:${reset} \t Remove directories and their contents recursively"			
echo -e "\t-${bold}--help:${reset} \t display this help and exit"					
echo -e "\t-${bold}--version:${reset} \t output version information and exit"

echo "------------"

# the command's usage examples
# example 1
echo "rm -rf test"
echo "Removes the contents of directory 'test' recursively ${bold}-r${reset}. It ignores nonexistent files, never prompt ${bold}-f${reset}" 

# example 2
echo "rm -- -file"
echo "Removes a file that starts with a ‘-’"


exit 0
